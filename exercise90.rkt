;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-advanced-reader.ss" "lang")((modname exercise90) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #t #t none #f ())))
(require 2htdp/image)
(require 2htdp/universe)
(define (tank-render t im)
  (place-image tank-image
               (tank-loc t)
               height
               im))
(define (missile-render t im)
  (place-image missile-image
               (posn-x t)
               (posn-y t)
               im))
(define tank-width 16)
(define tank-height 16)
(define tank-color "blue")
(define missile-width 7)
(define missile-height 7)
(define missile-color "red")
(define ufo-height 20)
(define ufo-width 40)
(define ufo-color "green")
(define ufo-image (rectangle ufo-width ufo-height "solid" ufo-color))
(define missile-image (rectangle missile-width missile-height "solid" missile-color))
(define tank-image (rectangle tank-width tank-height "solid" tank-color))
(define (ufo-render u im)
  (place-image ufo-image
               (posn-x u)
               (posn-y u)
               im))
(define (si-render s)
  (cond
    [(aim? s)
     (tank-render (aim-tank s)
                  (ufo-render (aim-ufo s) background))]
    [(fired? s)
     (tank-render (fired-tank s)
                  (ufo-render (fired-ufo s)
                              (missile-render (fired-missile s)
                                              background)))]))
(define R 10)
(define (in-reach? x)
  (< (if (posn? x)
         (sqrt(+(sqr(posn-x x))
                (sqr(posn-y x))))
         (abs x))
     R))
(define (si-game-over? si)
  (if (aim? si)
      (in-reach? (- (posn-y (aim-ufo si)) height))
      (or (in-reach? (- (posn-y (fired-ufo si)) height))
           (in-reach? (make-posn (- (posn-x (fired-ufo si)) (posn-x (fired-missile si)))
                                 (- (posn-y (fired-ufo si)) (posn-y (fired-missile si))))))))
(define (tank-move w)
  (make-tank (+ (tank-loc w) (tank-vel w))
             (tank-vel w)))
(define ufo-move-speed 3)
(define missile-move-speed 5)
(define ufo-random-range 2)
(define (ufo-move w)
  (make-posn (+ (posn-x w) (- (random (+ (* 2 ufo-random-range) 1)) ufo-random-range))
             (+ (posn-y w) ufo-move-speed)))
(define (missile-move w)
  (make-posn (posn-x w) 
             (- (posn-y w) missile-move-speed)))
(define (si-move w) 
  (if (aim? w)
      (make-aim (ufo-move (aim-ufo w))
                (tank-move (aim-tank w)))
      (make-fired (ufo-move (fired-ufo w))
                  (tank-move (fired-tank w))
                  (missile-move (fired-missile w)))))
(define width 200)
(define height 200)
(define-struct aim (ufo tank))
(define-struct fired (ufo tank missile))
(define background (empty-scene width height))
(define-struct tank (loc vel))
(define (change-vel w vel) 
  (if (aim? w)
      (make-aim (aim-ufo w) (make-tank (tank-loc(aim-tank w)) vel))
      (make-fired (fired-ufo w) (make-tank (tank-loc(fired-tank w)) vel) (fired-missile w))))
(define (get-tank w)
  (if (aim? w) (aim-tank w) (fired-tank w)))
(define (get-ufo w)
  (if (aim? w) (aim-ufo w) (fired-ufo w)))
(define (si-control w ke)
  (cond
    [(string=? ke " ") (if (aim? w)
                           (make-fired (aim-ufo w)
                                       (aim-tank w)
                                       (make-posn (tank-loc(aim-tank w))
                                                  height))
                           w)]
    [(string=? ke "left") (change-vel w (- (abs (tank-vel (get-tank w)))))]
    [(string=? ke "right") (change-vel w (abs (tank-vel (get-tank w))))]))
(define (main) 
  (big-bang (make-aim (make-posn (/ width 2) 0) (make-tank (/ width 2) 3))
            [to-draw si-render]
            [on-tick si-move]
            [stop-when si-game-over?]
            [on-key si-control]))
(check-expect (si-game-over? (make-aim (make-posn 100 0) (make-tank 100 3))) false)
(check-expect (in-reach? (- height)) false)